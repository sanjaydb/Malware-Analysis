Malware analysis  (banking malware analysis)


01. use "strings"  to scan the code , if found UPX1 then use unpacker for UPX, a common executable packer.
02. again use "strings" and will find lots of string (e.g banking name etc.)
03. study the strings ,

Runtime Analysis

01. simulation of a banking web site ( create a web site of found string (bankname.com))
02. start ethereal
03. point our web browser to the victim’s online banking site and type in fictitious banking credentials
04. follow the TCP stream from ethereal 
05. base64 decode the files, we discover that several of them are screenshots taken by the malware and a log file
06. analyse  the log file (here This log file contains a record of the keystrokes )
07. analyse HTTP POST data
08. need to know what the “port” and “pass” parameters mean or what additional functionality the malware may possess,have to
	 pursue further runtime or static analysis
09. It is important to note that malware locates the C&C site via two methods: an IP address or a DNS resource record.
10. The IP address method is less resilient. Generally, an IP address can easily be shut down, and if the C&C IP address cannot be updated       
	 within the malware, then the malware’s communication channel has been severed. On the other hand, DNS is used for survivability.
	 When the IP address of the C&C site is taken down,the attacker will just have to compromise another machine, set up her C&C site, and then
	 resolve the domain name to the new IP address Some of the details of the command and control site can lead to insights as well. If the
	 C&C site is located via DNS, the nature and type of DNS record might provide a lead. For example, many DNS services require contact        
	 information and payment details when a site is set up. If the attacker also registered other DNS names with the same contact
	 information that could allow an investigator to connect other host names to the ones under investigation. Attackers may also steal legitimate      domain names for their purposes, and may leave evidence in their wake In order to improve the survivability of their attack systems,    
	 attackers often associate more than one IP address with their chosen DNS record. If this is the case, it presents an
	 investigator with a few points of interest to follow and generates leads While some attackers are not particular about the systems they use    
	 for command and control, occasionally an attacker will display an affinity towards specific hosts or networks. In theses cases, this can be 
	 used to broaden an investigator’s knowledge of the attacker’s activities.
	

Example: Analysis of a Bot

01. used "process explorere - sysinternals "
The file being referred to has an MD5 checksum of 8B20E595E11C9BC0DCD50DF30C17309D and is packed with PeSpin.
02. find word like Mutex: optional characteristic that can be employed in files to verify that the process isn’t run multiple
times on a host.
03. netstat -aon "Issuing “netstat –aon” on the host reveals interesting network traffic genreated by process id 560."
Issuing “netstat –aon” on the host reveals some interesting network traffic being
generated by PID 560. We can see that this host is communicating with another IP on
port 6667/TCP as well as, apparently, scanning hosts on port 139/TCP. The investigators
now consider this executable to be the culprit
To begin to answer these questions, we perform some run-time testing. We run the
malware in an isolated VMware environment. We notice that nothing actually occurs.
04. The next step is to try and unpack the malware and load it into a dissasembler. While
performing static analysis, we determine this malware uses several techniques to make
analysis more difficult. The most severe of these is a virtual environment check
commonly referred to as “Red Pill.”22 If one were to bypass this check or trick the
malware, you would be able to run it in a virtual environment, otherwise you would need
to run it on a live, isolated machine or reverse engineer the malware to get the answers
you are seeking
Through reverse engineering, we were able to unpack the malware and determine that it
was indeed a bot. This particular bot has the ability to perform scans across the network
and many other capabilities. The command syntax issued to a bot that would perform this
type of activity could have looked like this:










